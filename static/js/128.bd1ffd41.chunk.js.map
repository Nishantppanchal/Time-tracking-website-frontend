{"version":3,"file":"static/js/128.bd1ffd41.chunk.js","mappings":"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","sources":["Components/LoadData/LoadCPData.js","Components/CPLister.js","Pages/ClientsAndProjects.js"],"sourcesContent":["// Import redux component\r\nimport store from '../../Store';\r\nimport { loadCPData } from '../../Features/CPData';\r\n// Import the axios instance\r\nimport axiosInstance from '../../Axios';\r\n\r\n// Function that fetch client and project data\r\nfunction fetchCPData(setIsCPDataLoading) {\r\n  // Sends a get request to get the clients and projects\r\n  axiosInstance\r\n    .get('clientProjectGet/')\r\n    // Handles the response to the request\r\n    .then((response) => {\r\n      // Set the CPData redux state to the response data\r\n      store.dispatch(loadCPData(response.data));\r\n      // Sets isCPDataLoading state to false\r\n      setIsCPDataLoading(false);\r\n    })\r\n    // Handles error\r\n    .catch((error) => {\r\n      console.error(error.response);\r\n      // If the access token is invalid\r\n      if (\r\n        error.response.data.detail ===\r\n        'Invalid token header. No credentials provided.'\r\n      ) {\r\n        // Sets the CPData state to the response data passed through the error data by axios intercept\r\n        store.dispatch(loadCPData(error.response.data.requestData.data));\r\n        // Sets isCPDataLoading state to false\r\n        setIsCPDataLoading(false);\r\n      }\r\n    });\r\n}\r\n\r\n// Export the fetchCPData\r\nexport default fetchCPData;\r\n","import DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Modal from '@mui/material/Modal';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n// Import axios instance\r\nimport axiosInstance from '../Axios.js';\r\n// Import redux components\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nimport { useState } from 'react';\r\n\r\nimport { deleteCP } from '../Features/CPData';\r\n\r\nfunction CPLister(props) {\r\n  // Create navigate function\r\n  const navigate = useNavigate();\r\n  // Creates dispatch function to update redux state\r\n  const dispatch = useDispatch();\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [CPToDelete, setCPToDelete] = useState(null);\r\n\r\n  // Handles editing log button click\r\n  function handleCPEdit(event, id) {\r\n    event.preventDefault();\r\n    if (props.type === 'client') {\r\n      navigate('/clients-and-projects/edit/clients/' + id);\r\n    } else if (props.type === 'project') {\r\n      navigate('/clients-and-projects/edit/projects/' + id);\r\n    }\r\n  }\r\n\r\n  function handleModalOpen(event, id) {\r\n    event.preventDefault();\r\n    setModalOpen(true);\r\n    setCPToDelete(id);\r\n  }\r\n\r\n  function handleModalClose(event) {\r\n    event.preventDefault();\r\n    setModalOpen(false);\r\n  }\r\n\r\n  // Handles deleting log\r\n  function handleCPDelete(event) {\r\n    var url = '';\r\n    if (props.type === 'client') {\r\n      url = 'CRUD/clients/' + CPToDelete + '/';\r\n    } else if (props.type === 'project') {\r\n      url = 'CRUD/projects/' + CPToDelete + '/';\r\n    }\r\n    // Sends a delete request to delete the log\r\n    axiosInstance.delete(url);\r\n\r\n    if (props.type === 'client') {\r\n      dispatch(deleteCP({ id: CPToDelete, type: 'clients' }));\r\n    } else if (props.type === 'project') {\r\n      dispatch(deleteCP({ id: CPToDelete, type: 'projects' }));\r\n    }\r\n\r\n    handleModalClose(event);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n\r\n      }}\r\n    >\r\n      <Stack\r\n        direction='column'\r\n        spacing={0}\r\n        divider={<Divider orientation='horizontal' flexItem />}\r\n        sx={{ maxWidth: '600px', width: '80%' }}\r\n      >\r\n        {props.CPData.map((CP, index) => (\r\n          <Stack\r\n            direction='row'\r\n            spacing={1}\r\n            sx={{ display: 'flex', alignItems: 'center' }}\r\n            key={index}\r\n          >\r\n            <Typography variant='body1' sx={{ width: '25%' }}>\r\n              {CP.name}\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'end',\r\n                width: '75%',\r\n              }}\r\n            >\r\n              <IconButton\r\n                aria-label='edit'\r\n                onClick={(event) => {\r\n                  handleModalOpen(event, CP.id);\r\n                }}\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                aria-label='delete'\r\n                onClick={(event) => {\r\n                  handleCPEdit(event, CP.id);\r\n                }}\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n            </Box>\r\n          </Stack>\r\n        ))}\r\n      </Stack>\r\n      <Modal open={modalOpen} onClose={handleModalClose}>\r\n        <Paper\r\n          sx={{\r\n            padding: '0.5rem',\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: '20rem',\r\n            backgroundColor: 'background.paper',\r\n          }}\r\n        >\r\n          <Typography variant='h6' align='center' margin='0.5rem'>\r\n            WOULD YOU LIKE TO DELETE THIS {props.type.toUpperCase()}\r\n          </Typography>\r\n          <Typography variant='body1' align='center' margin='0.5rem'>\r\n            Deleting this {props.type} will mean that you will not be able to\r\n            recover it again. This will PERMANENTLY delete the {props.type}.\r\n          </Typography>\r\n          <Stack\r\n            direction='row'\r\n            spacing={1}\r\n            justifyContent='flex-end'\r\n            marginTop='0.5rem'\r\n          >\r\n            <Button\r\n              variant='text'\r\n              onClick={handleModalClose}\r\n            >\r\n              CANCEL\r\n            </Button>\r\n            <Button\r\n              variant='text'\r\n              onClick={handleCPDelete}\r\n              sx={{ color: '#FF6961' }}\r\n            >\r\n              CONFIRM\r\n            </Button>\r\n          </Stack>\r\n        </Paper>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CPLister;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n// Import MUI components\r\nimport Grid from '@mui/material/Grid';\r\nimport { useEffect, useState } from 'react';\r\nimport './../Styles/Home.css';\r\n// Import axios instance\r\n// Import fetching components\r\nimport fetchCPData from '../Components/LoadData/LoadCPData';\r\n// Import redux components\r\nimport { useSelector } from 'react-redux';\r\n// Import custom components\r\nimport Header from '../Components/Header';\r\n// Import luxon component\r\nimport { CssBaseline, Typography } from '@mui/material';\r\nimport CPLister from '../Components/CPLister';\r\nimport ClientsAndProjectsLoading from '../Loading Components/ClientsAndProjectsLoading';\r\n\r\nfunction ClientAndProjects() {\r\n  // Stores clients and projects\r\n  const CPData = useSelector((state) => state.CPData.value);\r\n  const [isCPDataLoading, setIsCPDataLoading] = useState(\r\n    // If CPData is not empty make it false, else make it true\r\n    CPData.length > 0 ? false : true\r\n  );\r\n  const [clientData, setClientData] = useState([]);\r\n  const [projectData, setProjectData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    var clients = [];\r\n    var projects = [];\r\n    for (const CP of CPData) {\r\n      if (CP.type === 'clients') {\r\n        clients.push(CP);\r\n      } else {\r\n        projects.push(CP);\r\n      }\r\n    }\r\n\r\n    setClientData(clients);\r\n    setProjectData(projects);\r\n  }, [CPData]);\r\n\r\n  // Runs this code on every render/update after the DOM has updated\r\n  useEffect(() => {\r\n    // If the CPData has not loaded yet\r\n    if (isCPDataLoading === true) {\r\n      // Runs the function that fetches the CPData\r\n      fetchCPData(setIsCPDataLoading);\r\n      // Otherwise, if the CPData has already been loaded\r\n    }\r\n  }, []);\r\n\r\n  if (!isCPDataLoading) {\r\n    return (\r\n      <div width='100%'>\r\n        <CssBaseline />\r\n        <Header page='clients and projects' />\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          justifyContent='center'\r\n          alignItems='flex-start'\r\n          margin='1rem'\r\n          width='auto'\r\n        >\r\n          <Grid item xs={6}>\r\n            <Typography variant='h6' width='100%' align='center'>\r\n              Clients\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography variant='h6' width='100%' align='center'>\r\n              Projects\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <CPLister CPData={clientData} type='client' />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <CPLister CPData={projectData} type='project' />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <ClientsAndProjectsLoading />;\r\n  }\r\n}\r\n\r\nexport default ClientAndProjects;\r\n"],"names":["setIsCPDataLoading","axiosInstance","then","response","store","loadCPData","data","catch","error","console","detail","requestData","props","navigate","useNavigate","dispatch","useDispatch","useState","modalOpen","setModalOpen","CPToDelete","setCPToDelete","handleModalClose","event","preventDefault","Box","sx","display","justifyContent","alignItems","Stack","direction","spacing","divider","Divider","orientation","flexItem","maxWidth","width","CPData","map","CP","index","Typography","variant","name","IconButton","onClick","id","handleModalOpen","Delete","type","handleCPEdit","Edit","Modal","open","onClose","Paper","padding","position","top","left","transform","backgroundColor","align","margin","toUpperCase","marginTop","Button","url","deleteCP","color","useSelector","state","value","length","isCPDataLoading","clientData","setClientData","projectData","setProjectData","useEffect","clients","projects","push","fetchCPData","ClientsAndProjectsLoading","CssBaseline","Header","page","Grid","container","item","xs"],"sourceRoot":""}